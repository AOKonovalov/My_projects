# -*- coding: utf-8 -*-
"""Когортный анализ удержания пользователей.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mHGjp90Fa14JzRolXdYO93efxrEI6vBD

В файле хранятся данные об активности клиентов с сентября 2021 года по февраль 2022

Необходимо на основе этих данных провести когортный анализ.

Описание полей:

CLIENT_ID - идентификатор клиента;

VALUE_DAY - дата авторизации в мобильное приложение за последние 30 дней;
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.express as px

df = pd.read_csv( '/dataset.csv', sep = ";")

df = df[['CLIENT_ID', 'VALUE_DAY']]

df.head()

df.info()
#VALUE_DAY должен содержать тип date, а не object

df['VALUE_DAY'] = pd.to_datetime(df['VALUE_DAY'], errors='coerce')

"""**Находим первую дату каждого пользователя**"""

min_dt_date = df.groupby(by='CLIENT_ID', as_index=False)['VALUE_DAY'].min()

min_dt_date['month'] = min_dt_date['VALUE_DAY'].dt.to_period('M')

min_dt_date = min_dt_date[["CLIENT_ID", "month"]]

total_data = df.merge(min_dt_date, how='left', on = 'CLIENT_ID')

"""Для каждого VALUE_DAY достаем месяц"""

total_data['period'] = total_data['VALUE_DAY'].dt.to_period('M')

total_data

"""Находим разницу между месяцем текущей авторизации и первой авторизации клиента"""

total_data['visit_numder'] = (total_data['period'] - total_data['month']).apply(lambda x: x.n)

total_data

"""Находим количество уникальных пользователей в зависимости от того, через сколько месяцев после первой авторизации они заходили в приложение"""

cohort_data = total_data.groupby(["month", "visit_numder"], as_index=False)["CLIENT_ID"].nunique()

cohort_data

cohort_matrix = cohort_data.pivot(index='month', columns='visit_numder', values='CLIENT_ID')
cohort_matrix

"""Достаем количество пользователей, которые авторизовывались в первый месяц после регистрации, чтобы посчитать удержание (retention)"""

size = cohort_matrix.iloc[:, 0]

size

"""Находим retention для каждой когорты."""

data = cohort_matrix.divide(size, axis = 0)
data

"""Уже можно делать выводы по удержанию пользователей в каждой когорте, но лучше визуализировать"""

data = data.reset_index()
data['month'] = data['month'].astype(str)
data.info()

#делаем визуализацию
fig = px.imshow(data,
                labels=dict(x= "active users", y= "cohorts", color = 'retention'),
                )
fig.update_xaxes(side="top")
fig.show()